{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.js","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","handleChange","placeholder","onChange","type","App","useState","setMonsters","searchField","setSearchField","useEffect","fetch","then","response","json","data","e","target","value","searchValue","trim","toLowerCase","filter","includes","filterMonsters","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAaeA,MAVf,SAAcC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,Y,MCMTC,MAVf,SAAkBR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GACnB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,MCQnBO,MAbf,YAAiD,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,YAChC,OACE,8BACE,uBACEZ,UAAU,SACVa,SAAUF,EACVG,KAAK,SACLF,YAAaA,OC0BNG,MA/Bf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNR,EADM,KACIS,EADJ,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAmBb,OAfAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLR,EAAYQ,QAEf,IAUD,sBAAKzB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,aAAc,SAACe,GAAD,OAAOP,EAAeO,EAAEC,OAAOC,QAC7ChB,YAAY,oBAEd,cAAC,EAAD,CAAUJ,SAdd,WACE,IAAMqB,EAAcX,EAAYY,OAAOC,cACvC,OAAOvB,EAASwB,QAAO,SAAC9B,GAAD,OACrBA,EAAQG,KAAK0B,cAAcE,SAASJ,MAWhBK,SCnBXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4699350f.chunk.js","sourcesContent":["import React from 'react'\nimport \"./card.styles.css\"\n\nfunction Card(props) {\n  return (\n    <div className=\"card-container\">\n      <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  )\n}\n\nexport default Card\n","import React from \"react\";\nimport Card from \"../card/card.component\";\nimport \"./card-list.styles.css\";\n\nfunction CardList(props) {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => {\n        return <Card key={monster.id} monster={monster} />;\n      })}\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nfunction SearchBox({handleChange, placeholder}) {\n  return (\n    <div>\n      <input\n        className=\"search\"\n        onChange={handleChange}\n        type=\"search\"\n        placeholder={placeholder}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => {\n        setMonsters(data);\n      });\n  }, []);\n\n  function filterMonsters() {\n    const searchValue = searchField.trim().toLowerCase();\n    return monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchValue)\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        handleChange={(e) => setSearchField(e.target.value)}\n        placeholder=\"search monsters\"\n      />\n      <CardList monsters={filterMonsters()} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}